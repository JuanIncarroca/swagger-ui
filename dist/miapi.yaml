openapi: 3.0.3
info:
  title: Mi API para la guía
  version: 1.0.0
  description: API que usa OAuth 2.0 Client Credentials Grant para autenticación.

servers:
  - url: https://api.miproyecto.com

components:
  securitySchemes:
    OAuth2ClientCredentials:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://auth.miproyecto.com/oauth/token
          scopes: {}

  schemas:
    Producto:
      type: object
      properties:
        id:
          type: integer
          example: 123
        nombreProducto:
          type: string
          example: "Ejemplo Producto"
        fechaCreacion:
          type: string
          format: date-time
          example: "2025-05-28T15:30:00Z"
      required:
        - id
        - nombreProducto
        - fechaCreacion

    Usuario:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nombreUsuario:
          type: string
          example: "juanperez"
        email:
          type: string
          format: email
          example: "juanperez@ejemplo.com"
        fechaRegistro:
          type: string
          format: date-time
          example: "2025-05-28T15:30:00Z"
      required:
        - id
        - nombreUsuario
        - email
        - fechaRegistro

security:
  - OAuth2ClientCredentials: []

paths:
  /productos:
    get:
      summary: Listar todos los productos
      security:
        - OAuth2ClientCredentials: []
      responses:
        '200':
          description: Lista de productos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Producto'
        '401':
          description: No autorizado

    post:
      summary: Crear un nuevo producto
      security:
        - OAuth2ClientCredentials: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Producto'
      responses:
        '201':
          description: Producto creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producto'
        '400':
          description: Solicitud inválida
        '401':
          description: No autorizado

  /productos/{id}:
    get:
      summary: Obtener un producto por ID
      security:
        - OAuth2ClientCredentials: []
      parameters:
        - name: id
          in: path
          description: ID del producto a obtener
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producto'
        '401':
          description: No autorizado
        '404':
          description: Producto no encontrado

    put:
      summary: Reemplazar un producto por ID
      security:
        - OAuth2ClientCredentials: []
      parameters:
        - name: id
          in: path
          description: ID del producto a actualizar
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Producto'
      responses:
        '200':
          description: Producto actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producto'
        '400':
          description: Solicitud inválida
        '401':
          description: No autorizado
        '404':
          description: Producto no encontrado

    patch:
      summary: Actualizar parcialmente un producto
      security:
        - OAuth2ClientCredentials: []
      parameters:
        - name: id
          in: path
          description: ID del producto a actualizar parcialmente
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Campos a actualizar
      responses:
        '200':
          description: Producto actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producto'
        '400':
          description: Solicitud inválida
        '401':
          description: No autorizado
        '404':
          description: Producto no encontrado

    delete:
      summary: Eliminar un producto por ID
      security:
        - OAuth2ClientCredentials: []
      parameters:
        - name: id
          in: path
          description: ID del producto a eliminar
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Producto eliminado exitosamente (sin contenido)
        '401':
          description: No autorizado
        '404':
          description: Producto no encontrado

  /usuarios:
    get:
      summary: Listar todos los usuarios
      security:
        - OAuth2ClientCredentials: []
      responses:
        '200':
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
        '401':
          description: No autorizado

    post:
      summary: Crear un nuevo usuario
      security:
        - OAuth2ClientCredentials: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
      responses:
        '201':
          description: Usuario creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '400':
          description: Solicitud inválida
        '401':
          description: No autorizado

  /usuarios/{id}:
    get:
      summary: Obtener un usuario por ID
      security:
        - OAuth2ClientCredentials: []
      parameters:
        - name: id
          in: path
          description: ID del usuario a obtener
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '401':
          description: No autorizado
        '404':
          description: Usuario no encontrado

    put:
      summary: Reemplazar un usuario por ID
      security:
        - OAuth2ClientCredentials: []
      parameters:
        - name: id
          in: path
          description: ID del usuario a actualizar
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
      responses:
        '200':
          description: Usuario actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '400':
          description: Solicitud inválida
        '401':
          description: No autorizado
        '404':
          description: Usuario no encontrado

    patch:
      summary: Actualizar parcialmente un usuario
      security:
        - OAuth2ClientCredentials: []
      parameters:
        - name: id
          in: path
          description: ID del usuario a actualizar parcialmente
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Campos a actualizar
      responses:
        '200':
          description: Usuario actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '400':
          description: Solicitud inválida
        '401':
          description: No autorizado
        '404':
          description: Usuario no encontrado

    delete:
      summary: Eliminar un usuario por ID
      security:
        - OAuth2ClientCredentials: []
      parameters:
        - name: id
          in: path
          description: ID del usuario a eliminar
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Usuario eliminado exitosamente (sin contenido)
        '401':
          description: No autorizado
        '404':
          description: Usuario no encontrado
